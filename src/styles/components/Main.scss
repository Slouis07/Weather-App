@use '../variables/variables' as *;

.Main {
  margin: 0 auto;
  padding: 20px;
  max-width: 1200px;
  width: 100%;
  height: $main-height;
  overflow-y: auto;
  overflow-x: hidden;
  scrollbar-width: thin;
  scrollbar-color: var(--secondary-text-color) transparent;

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--secondary-text-color);
    border-radius: 20px;
  }

  .main-content {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .content-section {
    width: 100%;
    transition: all 0.3s ease;
  }

  // CSS Animation classes
  .fade-in {
    animation: fadeIn 0.5s ease-in-out;
  }

  .delayed-animation {
    animation-delay: 0.3s;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .forecast-tabs {
    margin: 1rem 0;
    
    .tabs-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 1rem;
      padding: 0.5rem;
      background-color: var(--card-bg-color, rgba(255, 255, 255, 0.05));
      border-radius: 2rem;
      width: fit-content;
      margin: 0 auto;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
      backdrop-filter: blur(10px);
      border: 1px solid var(--secondary-text-color, rgba(255, 255, 255, 0.1));
      
      @media screen and (max-width: 600px) {
        width: 100%;
        flex-direction: column;
        border-radius: 1rem;
        gap: 0.5rem;
      }
    }
    
    .tab-button {
      background: transparent;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 1.5rem;
      font-size: 1rem;
      font-weight: 600;
      color: var(--primary-text-color);
      cursor: pointer;
      transition: all 0.2s ease;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      
      i {
        font-size: 1.2rem;
      }
      
      &:hover {
        background-color: var(--widget-hover-bg-color, rgba(255, 255, 255, 0.1));
      }
      
      &.active {
        background-color: var(--accent-color, #4a90e2);
        color: white;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
      }
      
      @media screen and (max-width: 600px) {
        width: 100%;
        justify-content: center;
        padding: 0.6rem 1rem;
      }
    }
  }

  .forecast-container {
    position: relative;
    overflow: contain;
    border-radius: 1rem;
    transition: all 0.3s ease;
    
    @media screen and (max-width: 600px) {
      margin: 0 -0.5rem;
    }
  }

  @media only screen and (max-width: 1200px) {
    padding: 15px;
    margin: 0 1rem;
  }
  
  @media only screen and (max-width: 768px) {
    padding: 12px;
    margin: 0 0.5rem;
    height: calc(100vh - #{$header-height} - 1rem);
  }
  
  @media only screen and (max-width: 600px) {
    padding: 20px;
    margin: 0;
    
    .content-section {
      margin-bottom: 0.5rem;
    }
  }
  
  // Add swipe effect for mobile
  .swipe-hint {
    display: none;
    text-align: center;
    font-size: 0.85rem;
    opacity: 0.7;
    margin: 0.5rem 0;
    animation: fadeInOut 2s infinite;
    
    @media screen and (max-width: 768px) {
      display: block;
    }
    
    i {
      margin-left: 0.3rem;
    }
  }
  
  @keyframes fadeInOut {
    0%, 100% { opacity: 0.5; }
    50% { opacity: 1; }
  }
}

// Add these CSS variables to your root or app component
:root {
  --card-bg-color: rgba(255, 255, 255, 0.07);
  --widget-hover-bg-color: rgba(255, 255, 255, 0.1);
  --accent-color: #4a90e2;
}

// For dark mode support
.App-dark {
  --card-bg-color: rgba(30, 41, 59, 0.7);
  --widget-hover-bg-color: rgba(30, 41, 59, 0.8);
  --accent-color: #60a5fa;
}